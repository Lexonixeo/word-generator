plugins {
    id 'java'
}

group = 'my.lexonix'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += "--enable-preview"
}
tasks.withType(Test).configureEach {
    jvmArgs += "--enable-preview"
}
tasks.withType(JavaExec).configureEach {
    jvmArgs += '--enable-preview'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes "Main-Class": "my.lexonix.wordgen.generator.SentenceGenerator"
    }
    archiveFileName.set("sentence.jar")
    destinationDirectory.set(file("/"))

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}

tasks.register('uberJar', Jar) {
    manifest {
        attributes "Main-Class": "funcmath.console.ConsoleLaunch"
    }

    archiveClassifier = 'uber'

    archiveFileName.set("funcmath.jar")

    destinationDirectory.set(file("/"))

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }

    doFirst {
        from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
}


dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation("org.json:json:20250517")

    implementation("ch.qos.logback:logback-classic:1.5.13")
    implementation("net.dv8tion:JDA:5.6.1") { // replace $version with the latest version
        // Optionally disable audio natives to reduce jar size by excluding `opus-java` and `tink`
        // Gradle DSL:
        // exclude module: 'opus-java' // required for encoding audio into opus, not needed if audio is already provided in opus encoding
        // exclude module: 'tink' // required for encrypting and decrypting audio
        // Kotlin DSL:
        // exclude(module="opus-java") // required for encoding audio into opus, not needed if audio is already provided in opus encoding
        // exclude(module="tink") // required for encrypting and decrypting audio
    }

    // https://mvnrepository.com/artifact/org.telegram/telegrambots
    implementation("org.telegram:telegrambots:6.9.7.1")
}

test {
    useJUnitPlatform()
}